---
# tasks file for splunk-docker

- name: Create data container
  docker_container:
    name: '{{ splunk_container_name + "-data" }}'
    image: busybox
    state: present
    volumes:
      - /opt/splunk/var/lib/splunk
  when: splunk_use_data_container

- name: "Pull Splunk image - splunk/splunk:{{ splunk_docker_image_tag }}"
  docker_image:
    name: 'splunk/splunk'
    tag:  '{{ splunk_docker_image_tag }}'

#docker run -d -e "SPLUNK_START_ARGS=--accept-license " -e "SPLUNK_USER=root" -p "8000:8000" splunk/splunk
- name: Setup Splunk container
  docker_container:
    name:  '{{ splunk_container_name }}'
    image: 'splunk/splunk:{{ splunk_docker_image_tag }}'
    state:  started
    ports:
      - '{{ splunk_http_port }}:8000'
      - '{{ splunk_admin_port }}:8088'
      - '{{ splunk_hec_port }}:8089'
    volumes_from: '{{ [splunk_container_name + "-data"] if splunk_use_data_container else [] }}'
    volumes: '{{ ["{}:/opt/splunk/etc/system/local".format(splunk_config_dir)] + ([splunk_data_dir + ":/opt/splunk/var/lib/splunk"] if not splunk_use_data_container else [] ) }}'
    env:
      TZ: '{{ splunk_container_timezone }}'
      SPLUNK_START_ARGS: '--accept-license --seed-passwd {{ splunk_password }}'
      SPLUNK_USER:  "splunk"
#      SPLUNK_CMD:   'edit user admin -password {{ splunk_password }} -role admin -auth admin:changeme'
  register: splunk_container

- name: Wait until Splunk is available
  wait_for: port={{ splunk_http_port }} delay=3
  when: splunk_container.changed
