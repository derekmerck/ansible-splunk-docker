---
# tasks file for splunk-docker

# TODO: don't forget to set truncate=0 in props.conf when setting up a new splunk for dose monitoring!

#############################
# Create required data container and directories
#############################

- name: Create data container
  docker_container:
    name: '{{ splunk_container_name + "-data" }}'
    image: busybox
    state: present
    volumes:
      - /opt/splunk
  when: splunk_use_data_container

- name:    "Setup splunk data folder"
  file:
    path:  "{{ splunk_data_dir }}"
    state: directory
  when: not splunk_use_data_container

- name:    "Setup splunk config folder"
  file:
    path:  "{{ splunk_config_dir }}"
    state: directory


#############################
# Setup container
#############################

- name: "Pull Splunk image - splunk/splunk:{{ splunk_docker_image_tag }}"
  docker_image:
    name: 'splunk/splunk'
    tag:  '{{ splunk_docker_image_tag }}'

#docker run -d -e "SPLUNK_START_ARGS=--accept-license " -e "SPLUNK_USER=root" -p "8000:8000" splunk/splunk
- name: Setup Splunk container
  docker_container:
    name:  '{{ splunk_container_name }}'
    image: 'splunk/splunk:{{ splunk_docker_image_tag }}'
    state:  started
    ports:
      - '{{ splunk_http_port }}:8000'
      - '{{ splunk_admin_port }}:8089'
      - '{{ splunk_hec_port }}:8088'
    volumes_from: '{{ [splunk_container_name + "-data"] if splunk_use_data_container else [] }}'
    volumes: '{{
          ["{}:/opt/splunk/etc/system/local".format(splunk_config_dir)] +
         (["{}:/opt/splunk/var/lib/splunk".format(splunk_data_dir)] if not splunk_use_data_container else [] ) +
         (["{}:/opt/splunk/etc/auth/certs".format(splunk_cert_dir) ] if splunk_secured else [])
       }}'
    log_driver: json-file  # Ignore splunk logging default if present
    env:
      TZ: '{{ splunk_container_timezone }}'
      SPLUNK_START_ARGS: '--accept-license --seed-passwd {{ splunk_password }}'
      SPLUNK_USER:  'root'
      # If it's a small hdd, need to reduce the required hdd space
      SPLUNK_CMD:   'set minfreemb 500 -auth admin:{{ splunk_password }}'
      # SPLUNK_CMD_1: "http-event-collector enable -enable-ssl 0 -uri https://localhost:8089 -auth admin:{{ splunk_password }}"
  register: splunk_container

# Sometimes this wait needs to be much longer even though the http service is up
- name: Wait until Splunk is available
  wait_for: port={{ splunk_http_port }} delay=5
  when: splunk_container.changed

- name: Reduce required size
  command: "docker exec {{ splunk_container_name }} bin/splunk set minfreemb {{ splunk_required_disk_size }} -auth admin:{{ splunk_password }}"
  when: splunk_container.changed and splunk_required_disk_size > 0

# If it's a small hdd, need to restart the container
- name: Restart Splunk container
  docker_container:
    name:  '{{ splunk_container_name }}'
    state:  started
    restart: True
  when: splunk_container.changed and splunk_required_disk_size > 0

- name: Wait until Splunk is available
  wait_for: port={{ splunk_http_port }} delay=3
  when: splunk_container.changed and splunk_required_disk_size > 0

#############################
# Update security settings
#############################

- name: Update security settings
  include: secured_play.yml
  when: splunk_secured

#############################
# Add indices and tokens
#############################

- name: Add service indices
  command: "docker exec {{ splunk_container_name }} bin/splunk add index {{ item }} -auth admin:{{ splunk_password }}"
  with_list: "{{ splunk_indices }}"
  ignore_errors: yes  # May already exist

#############################
# Add indices and tokens
#############################

- name: Add hec tokens
  include: create_hecs_play.yml
  when: splunk_create_hec_tokens

#############################
# Add plug-ins
#############################

- name: Copy Splunkbase apps to shared dir
  copy:
    src: "{{ item }}"
    dest: "{{ splunk_config_dir }}/splunk-apps/"
  with_fileglob:
    - "{{ role_path }}/splunk-apps/*.tgz"
  ignore_errors: yes

- name: Install Splunkbase apps from shared dir
  command:  "docker exec {{ splunk_container_name }} bin/splunk install app /opt/splunk/etc/system/local/splunk-apps/{{ item | basename }} -update 1 -auth admin:{{ splunk_password }}"
  with_fileglob:  # fileglob runs on local, so this is a bit of a hack
    - "{{ role_path }}/splunk-apps/*.tgz"
  ignore_errors: yes