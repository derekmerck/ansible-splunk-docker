---
# tasks file for splunk-docker

# TODO: don't forget to set truncate=0 in props.conf when setting up a new splunk for dose monitoring!

#############################
# Create required data container and directories
#############################

- name: Create data container
  docker_container:
    name: '{{ splunk_container_name + "-data" }}'
    image: busybox
    state: present
    volumes:
      - /opt/splunk/var/lib/splunk
  when: splunk_use_data_container

- name:    "Setup splunk data folder"
  file:
    path:  "{{ splunk_data_dir }}"
    state: directory
  when: not splunk_use_data_container

- name:    "Setup splunk config folder"
  file:
    path:  "{{ splunk_config_dir }}"
    state: directory

#############################
# Setup container
#############################

- name: "Pull Splunk image - splunk/splunk:{{ splunk_docker_image_tag }}"
  docker_image:
    name: 'splunk/splunk'
    tag:  '{{ splunk_docker_image_tag }}'

#docker run -d -e "SPLUNK_START_ARGS=--accept-license " -e "SPLUNK_USER=root" -p "8000:8000" splunk/splunk
- name: Setup Splunk container
  docker_container:
    name:  '{{ splunk_container_name }}'
    image: 'splunk/splunk:{{ splunk_docker_image_tag }}'
    state:  started
    ports:
      - '{{ splunk_http_port }}:8000'
      - '{{ splunk_admin_port }}:8088'
      - '{{ splunk_hec_port }}:8089'
    volumes_from: '{{ [splunk_container_name + "-data"] if splunk_use_data_container else [] }}'
    volumes: '{{ ["{}:/opt/splunk/etc/system/local".format(splunk_config_dir)] + ([splunk_data_dir + ":/opt/splunk/var/lib/splunk"] if not splunk_use_data_container else [] ) }}'
    env:
      TZ: '{{ splunk_container_timezone }}'
      SPLUNK_START_ARGS: '--accept-license --seed-passwd {{ splunk_password }}'
      SPLUNK_USER:  'splunk'
      # SPLUNK_CMD:   'edit user admin -password {{ splunk_password }} -role admin -auth admin:changeme'
      SPLUMK_CMD1:  'set minfreemb 500 -auth admin:{{ splunk_password }}'  # Reduce required disk space
  register: splunk_container

- name: Wait until Splunk is available
  wait_for: port={{ splunk_http_port }} delay=3
  when: splunk_container.changed

- name: Add service indices
  command: "docker exec {{ splunk_container_name }} bin/splunk add index {{ item }} -auth admin:{{ splunk_password }}"
  with_list: splunk_extra_indices
  ignore_errors: yes  # May already exist

- name: Add service tokens
  command: "docker exec {{ splunk_container_name }} bin/splunk http-event-collector create {{ item.key }} '{{ item.value.desc }}' -index {{ item.value.index }} -uri https://localhost:8089 -auth admin:{{ splunk_password }}"
  with_dict: "{{ splunk_extra_toks }}"
  ignore_errors: yes  # May already exist


#############################
# If tokens have been added, need to register them for the rest of the playbook
#############################

- name: List available tokens
  command:  "docker exec {{ splunk_container_name }} bin/splunk http-event-collector list -uri https://localhost:8089 -auth admin:{{ splunk_password }}"
  register: result

- set_fact:
    # hec_tok: "{{ result.stdout | regex_findall(regexp) | first }}"
    splunk_toks: "{{ splunk_toks | default({}) | combine({item.key: result.stdout | regex_findall(regexp) | first})}}"
  vars:
    regexp: 'http:\/\/{{ item.key }}\n\s*token=(?P<hec_tok>.*)\n'
  with_dict: "{{ splunk_extra_toks }}"

- debug:
    var: splunk_toks

- debug:
    msg: "Saving tokens to 'secret_tokens.txt'"

- local_action: copy content={{ splunk_toks }} dest='secrets.txt'
  become: No


#############################
# Add plug-ins
#############################

- name: Copy Splunkbase apps to shared dir
  copy:
    src: "{{ item }}"
    dest: "{{ splunk_config_dir }}/splunk-apps/"
  with_fileglob:
    - "{{ role_path }}/splunk-apps/*.tgz"
  ignore_errors: yes

- name: Install Splunkbase apps from shared dir
  command:  "docker exec {{ splunk_container_name }} bin/splunk install app /opt/splunk/etc/system/local/splunk-apps/{{ item | basename }} -update 1 -auth admin:{{ splunk_password }}"
  with_fileglob:  # fileglob runs on local, so this is a bit of a hack
    - "{{ role_path }}/splunk-apps/*.tgz"
  ignore_errors: yes